services:
# postgres
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asadbek
      PGDATA: /data/postgres
      POSTGRES_DB: userdb
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5332"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

# user_service
  user_service:
    container_name: user_service
    build: ./user-service
    depends_on:
      - "db"
    ports:
      - "1111:1111"
    networks:
      - db

# # post_service
#   post_service:
#     container_name: post_service
#     build: ./post-service
#     depends_on:
#       - "db"
#     ports:
#       - "2222:2222"
#     networks:
#       - db

  redisdb:
    container_name: redisdb
    image:  redis
    ports:
      - "6378:6378"
    networks:
      - db

  # api-gateway
  api:
    container_name: api-gateway
    build: ./api-gateway
    depends_on:
      -  "redisdb"
      -  "user_service"
    ports:
      - "8080:8080"
    networks:
      - db
  
# migrate
  migrate:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    command: -path /migrations -database postgres://postgres:asadbek@db:5432/userdb?sslmode=disable -verbose up
    links:
      - db
    depends_on:
      - db

networks:
  db:
    driver: bridge

volumes:
  db:
